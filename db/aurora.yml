---
Description: AWS Aurora Database Cluster

Parameters:

  AppName:
    Description: Name of the application (no spaces or special characters)
    Type: String

  EnvironmentName:
    Description: Which environment stage do we deploy this configuration to?
    Type: String
  
  VPC:
    Description: VPC to deploy to
    Type: AWS::EC2::VPC::Id

  Subnets:
    Description: Private Subnets in two separate AZs - same AZs as public subnets
    Type: List<AWS::EC2::Subnet::Id>
  
  BastionSecurityGroup:
    Description: Bastion security group to allow SSH tunneling from
    Type: AWS::EC2::SecurityGroup::Id

  SnapshotARN:
    Description: (Optional) ARN identifying the database snapshot we are building the cluster from.
    Type: String

  DatabaseName:
    Description: The name of the database.
    Type: String
    ConstraintDescription: "Must contain 4 to 64 alphanumeric characters, and it can not be a reserved word in the database."
    AllowedPattern: "[a-zA-Z0-9\\-_]*"
    MinLength: 4
    MaxLength: 64

  DbInstanceName:
    Description: This is used to identify the RDS instances that are part of this RDS Cluster.
    Type: String
    ConstraintDescription: Instance names must be alpha-numeric characters.
    AllowedPattern: "[a-zA-Z0-9\\-]*"

  DbUserName:
    Description: User that our application uses to log into the database.
    Type: String
    ConstraintDescription: User names must be alpha-numeric characters.
    AllowedPattern: "[a-zA-Z0-9_]*"

  DbPassword:
    Description: Password that is used to authneticate our database user.
    Type: String
    NoEcho: true
    ConstraintDescription: Passwords must be between 8 and 40 characters. You may not use '"', '@', or '/' characters.
    AllowedPattern: '[^"@/]*'
    MinLength: '8'
    MaxLength: '40'

  DbEngine:
    Description: Choose a database engine for your application
    Type: String
    Default: aurora-mysql
    AllowedValues:
      - aurora-mysql
      - aurora-postgresql

  DbInstanceSize:
    Description: What size instance should our cluster run on?
    Type: String
    Default: db.t2.small
    AllowedValues:
      - db.t2.small
      - db.t2.medium

  BackupWindow:
    Description: Time range to prefer AWS to perform backups
    Type: String
    Default: 04:30-05:30
  
  MaintenanceWindow:
    Description: Date/Time range to prefer AWS to perform maintenance changes
    Type: String
    Default: Sat:10:00-Sat:22:00

Conditions:

  NoSnapshot: !Equals [!Ref SnapshotARN, ""]
  UseSnapshot: !Not [!Equals [!Ref SnapshotARN, ""]]

  IsMultiNodeEnv: !Equals [!Ref EnvironmentName, "prod"]

Mappings:
  EngineMap:
    'aurora-mysql':
      JdbcName: mysql
      EngineVersion: '5.7'
      Port: 3306
      ParameterGroupFamily: 'aurora-mysql5.7'
    'aurora-postgresql':
      JdbcName: postgresql
      EngineVersion: '9.6'
      Port: 5432
      ParameterGroupFamily: 'aurora-postgresql9.6'

Resources:

  DbClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Sub "${AppName} Aurora Cluster Parameter Group"
      Family: !FindInMap [EngineMap, !Ref DbEngine, ParameterGroupFamily]
      Parameters:
        time_zone: US/Eastern

  DbParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Sub "${AppName} DB Parameter Group enabling Slow Logging"
      Family: !FindInMap [EngineMap, !Ref DbEngine, ParameterGroupFamily]
      Parameters:
        long_query_time: 3
        log_output: FILE
        slow_query_log: 1
        general_log: 0
        log_queries_not_using_indexes: 0

  DbClusterSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    DependsOn: DbSecurityGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for our Aurora database cluster
      SubnetIds: !Ref Subnets
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Application
          Value: !Ref AppName

  DbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}-sg"
      GroupDescription: Security group controlling access to the database cluster
      VpcId: !Ref VPC
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Application
          Value: !Ref AppName

  AuroraDbClusterNoSnapshot:
    Type: AWS::RDS::DBCluster
    DependsOn: 
      - DbClusterSubnetGroup
      - DbParameterGroup
    Condition: NoSnapshot
    Properties:
      BackupRetentionPeriod: 7
      DatabaseName: !Ref DatabaseName
      DBSubnetGroupName: !Ref DbClusterSubnetGroup
      DBClusterParameterGroupName: !Ref DbClusterParameterGroup
      Engine: !Ref DbEngine
      MasterUsername: !Ref DbUserName
      MasterUserPassword: !Ref DbPassword
      Port: !FindInMap [EngineMap, !Ref DbEngine, Port]
      PreferredBackupWindow: !Ref BackupWindow
      PreferredMaintenanceWindow: !Ref MaintenanceWindow
      StorageEncrypted: false
      VpcSecurityGroupIds:
        - !Ref DbSecurityGroup
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Application
          Value: !Ref AppName

  AuroraDbClusterWithSnapshot:
    Type: AWS::RDS::DBCluster
    DependsOn: 
      - DbClusterSubnetGroup
      - DbParameterGroup
    Condition: UseSnapshot
    Properties:
      BackupRetentionPeriod: 7
      DBSubnetGroupName: !Ref DbClusterSubnetGroup
      DBClusterParameterGroupName: !Ref DbClusterParameterGroup
      Engine: !Ref DbEngine
      Port: !FindInMap [EngineMap, !Ref DbEngine, Port]
      PreferredBackupWindow: !Ref BackupWindow
      PreferredMaintenanceWindow: !Ref MaintenanceWindow
      SnapshotIdentifier: !Ref SnapshotARN
      StorageEncrypted: false
      VpcSecurityGroupIds:
        - !Ref DbSecurityGroup
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Application
          Value: !Ref AppName

  AuroraDbClusterInstance1:
    Type: AWS::RDS::DBInstance
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
      DBClusterIdentifier: !If
        - UseSnapshot
        - !Ref AuroraDbClusterWithSnapshot
        - !Ref AuroraDbClusterNoSnapshot
      DBInstanceClass: !Ref DbInstanceSize
      DBInstanceIdentifier: !Sub "${DbInstanceName}-1"
      DBParameterGroupName: !Ref DbParameterGroup
      DBSubnetGroupName: !Ref DbClusterSubnetGroup
      Engine: !Ref DbEngine
      PubliclyAccessible: true
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Application
          Value: !Ref AppName

  AuroraDbClusterInstance2:
    Type: AWS::RDS::DBInstance
    Condition: IsMultiNodeEnv
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
      DBClusterIdentifier: !If
        - UseSnapshot
        - !Ref AuroraDbClusterWithSnapshot
        - !Ref AuroraDbClusterNoSnapshot
      DBInstanceClass: !Ref DbInstanceSize
      DBInstanceIdentifier: !Sub "${DbInstanceName}-2"
      DBParameterGroupName: !Ref DbParameterGroup
      DBSubnetGroupName: !Ref DbClusterSubnetGroup
      Engine: !Ref DbEngine
      PubliclyAccessible: true
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Application
          Value: !Ref AppName

  AuroraDbClusterInstance3:
    Type: AWS::RDS::DBInstance
    Condition: IsMultiNodeEnv
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
      DBClusterIdentifier: !If
        - UseSnapshot
        - !Ref AuroraDbClusterWithSnapshot
        - !Ref AuroraDbClusterNoSnapshot
      DBInstanceClass: !Ref DbInstanceSize
      DBInstanceIdentifier: !Sub "${DbInstanceName}-3"
      DBParameterGroupName: !Ref DbParameterGroup
      DBSubnetGroupName: !Ref DbClusterSubnetGroup
      Engine: !Ref DbEngine
      PubliclyAccessible: true
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Application
          Value: !Ref AppName

  # DbInstanceSsm:
  #   Type: AWS::SSM::Parameter
  #   Properties:
  #     Description: SSM Parameter for the created Database Instance JDBC url
  #     Name: !Sub "${AppName}.${EnvironmentName}.db-url"
  #     Type: String
  #     Value:
  #       Fn::Sub:
  #         - "jdbc:${JdbcName}://${DbUrl}:${DbPort}/${DatabaseName}"
  #         - JdbcName: !FindInMap [EngineMap, !Ref DbEngine, JdbcName]
  #           DbUrl: !If [UseSnapshot, !Sub "${AuroraDbClusterWithSnapshot.Endpoint.Address}", !Sub "${AuroraDbClusterNoSnapshot.Endpoint.Address}"]
  #           DbPort: !If [UseSnapshot, !Sub "${AuroraDbClusterWithSnapshot.Endpoint.Port}", !Sub "${AuroraDbClusterNoSnapshot.Endpoint.Port}"]

Outputs:

  ConnectionEndpoint:
    Description: Connection Endpoint for the cluster
    Value: !If
      - UseSnapshot
      - !Sub "${AuroraDbClusterWithSnapshot.Endpoint.Address}"
      - !Sub "${AuroraDbClusterNoSnapshot.Endpoint.Address}"
  
  ConnectionPort:
    Description: Connection Port for the cluster
    Value: !If
      - UseSnapshot
      - !Sub "${AuroraDbClusterWithSnapshot.Endpoint.Port}"
      - !Sub "${AuroraDbClusterNoSnapshot.Endpoint.Port}"
